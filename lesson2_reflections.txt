What happens when you initialize a repository? Why do you need to do it?
A .git directory is created within the repository (or the main directory).
This file will have all the metadata that will be tracked and the details
regarding different commits.

How is the staging area different from the working directory and the
repository? What value do you think it offers?
An intermediate space that provides the flexibility to add only the changes in
certain files and perform the commit while not committing any already made
changes that are functionally not related.

How can you use the staging area to make sure you have one commit per logical
change?
Use git diff and git diff --staged to understand the changes between (working
directory & staging area and staging area & repo recent commit. Then add only
the changes one wants to commit to staging area, make sure this is exactly
what we would like to commit by git diff --staged and then perform the commit
operation

What are some situations when branches would be helpful in keeping your
history organized? How would branches help?
Branches are helpful when you are trying out new features or other parallel
versions of your main code. It will also be helpful and we can start working
on the parallel branch till and at a later point we could bring it to main
stream or retain it as such. 

How do the diagrams help you visualize the branch structure?
Diagrams provide branch structure in easily interpretable and provides the
interrelationships well

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?
We bring in the changes from the parallel branch into the main branch. It
shows the way code has developed what changes are brought in etc.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?
Pros of auto merging
Saves us time in unrelated pieces of code

Cons
If there is same functionality can't tell which version is good automatically

